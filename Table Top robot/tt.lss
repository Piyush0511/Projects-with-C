
tt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001a6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000001fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  0000021a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000002c3  00000000  00000000  00000235  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000f5  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000002f9  00000000  00000000  000005ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000008e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000b1  00000000  00000000  00000908  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000002f8  00000000  00000000  000009b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000240  00000000  00000000  00000cb1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 d1 00 	jmp	0x1a2	; 0x1a2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include<util/delay.h>

void main()
{
  6c:	6f 92       	push	r6
  6e:	7f 92       	push	r7
  70:	8f 92       	push	r8
  72:	9f 92       	push	r9
  74:	af 92       	push	r10
  76:	bf 92       	push	r11
  78:	cf 92       	push	r12
  7a:	df 92       	push	r13
  7c:	ef 92       	push	r14
  7e:	ff 92       	push	r15
  80:	0f 93       	push	r16
  82:	1f 93       	push	r17
  84:	cf 93       	push	r28
  86:	df 93       	push	r29
 int c;
 
DDRD=0b00000000;
  88:	11 ba       	out	0x11, r1	; 17
DDRB=0b11111111;
  8a:	8f ef       	ldi	r24, 0xFF	; 255
  8c:	87 bb       	out	0x17, r24	; 23
PORTD=0b11111111;
  8e:	82 bb       	out	0x12, r24	; 18
while(1)
{
 c=PIND;

 if(c==0b11110000)//all on
   PORTB=0b00001010;
  90:	5a e0       	ldi	r21, 0x0A	; 10
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  92:	c0 e5       	ldi	r28, 0x50	; 80
  94:	d3 ec       	ldi	r29, 0xC3	; 195
  
  if(c==0b11110010)
   {
    PORTB=0b00001010;
    _delay_ms(200);
    PORTB=0b00000110;
  96:	66 e0       	ldi	r22, 0x06	; 6
  98:	4c e8       	ldi	r20, 0x8C	; 140
  9a:	64 2e       	mov	r6, r20
  9c:	49 eb       	ldi	r20, 0xB9	; 185
  9e:	74 2e       	mov	r7, r20
  }
   
   
  if(c==0b11110100)
  {
  PORTB=0b00000101;
  a0:	75 e0       	ldi	r23, 0x05	; 5
  a2:	34 e2       	ldi	r19, 0x24	; 36
  a4:	83 2e       	mov	r8, r19
  a6:	34 ef       	ldi	r19, 0xF4	; 244
  a8:	93 2e       	mov	r9, r19
  _delay_ms(250);
  PORTB=0b00001001;
  aa:	49 e0       	ldi	r20, 0x09	; 9
  ac:	28 ed       	ldi	r18, 0xD8	; 216
  ae:	a2 2e       	mov	r10, r18
  b0:	26 ed       	ldi	r18, 0xD6	; 214
  b2:	b2 2e       	mov	r11, r18
DDRB=0b11111111;
PORTD=0b11111111;

while(1)
{
 c=PIND;
  b4:	a9 e1       	ldi	r26, 0x19	; 25
  b6:	b0 e0       	ldi	r27, 0x00	; 0
  b8:	98 ee       	ldi	r25, 0xE8	; 232
  ba:	c9 2e       	mov	r12, r25
  bc:	9d ef       	ldi	r25, 0xFD	; 253
  be:	d9 2e       	mov	r13, r25
  c0:	80 e4       	ldi	r24, 0x40	; 64
  c2:	e8 2e       	mov	r14, r24
  c4:	8c e9       	ldi	r24, 0x9C	; 156
  c6:	f8 2e       	mov	r15, r24
  c8:	06 ef       	ldi	r16, 0xF6	; 246
  ca:	11 ed       	ldi	r17, 0xD1	; 209
  cc:	80 b3       	in	r24, 0x10	; 16
  ce:	90 e0       	ldi	r25, 0x00	; 0

 if(c==0b11110000)//all on
  d0:	80 3f       	cpi	r24, 0xF0	; 240
  d2:	91 05       	cpc	r25, r1
  d4:	11 f4       	brne	.+4      	; 0xda <main+0x6e>
   PORTB=0b00001010;
  d6:	58 bb       	out	0x18, r21	; 24
  d8:	29 c0       	rjmp	.+82     	; 0x12c <main+0xc0>
 
 if(c==0b11111000)//1 of
  da:	88 3f       	cpi	r24, 0xF8	; 248
  dc:	91 05       	cpc	r25, r1
  de:	71 f4       	brne	.+28     	; 0xfc <main+0x90>
 {
  PORTB=0b00000101;
  e0:	78 bb       	out	0x18, r23	; 24
  e2:	28 eb       	ldi	r18, 0xB8	; 184
  e4:	3b e0       	ldi	r19, 0x0B	; 11
  e6:	fd 01       	movw	r30, r26
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x7c>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ec:	21 50       	subi	r18, 0x01	; 1
  ee:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  f0:	d1 f7       	brne	.-12     	; 0xe6 <main+0x7a>
  _delay_ms(300);
  PORTB=0b00001001;
  f2:	48 bb       	out	0x18, r20	; 24
  f4:	fe 01       	movw	r30, r28
  f6:	31 97       	sbiw	r30, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <main+0x8a>
  fa:	29 c0       	rjmp	.+82     	; 0x14e <main+0xe2>
  _delay_ms(200);
  }
   
   
  if(c==0b11110100)
  fc:	84 3f       	cpi	r24, 0xF4	; 244
  fe:	91 05       	cpc	r25, r1
 100:	49 f4       	brne	.+18     	; 0x114 <main+0xa8>
  {
  PORTB=0b00000101;
 102:	78 bb       	out	0x18, r23	; 24
 104:	f4 01       	movw	r30, r8
 106:	31 97       	sbiw	r30, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <main+0x9a>
  _delay_ms(250);
  PORTB=0b00001001;
 10a:	48 bb       	out	0x18, r20	; 24
 10c:	f5 01       	movw	r30, r10
 10e:	31 97       	sbiw	r30, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <main+0xa2>
 112:	2a c0       	rjmp	.+84     	; 0x168 <main+0xfc>
  _delay_ms(220);
  }
  
  if(c==0b11110010)
 114:	82 3f       	cpi	r24, 0xF2	; 242
 116:	91 05       	cpc	r25, r1
 118:	49 f4       	brne	.+18     	; 0x12c <main+0xc0>
   {
    PORTB=0b00001010;
 11a:	58 bb       	out	0x18, r21	; 24
 11c:	fe 01       	movw	r30, r28
 11e:	31 97       	sbiw	r30, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <main+0xb2>
    _delay_ms(200);
    PORTB=0b00000110;
 122:	68 bb       	out	0x18, r22	; 24
 124:	f3 01       	movw	r30, r6
 126:	31 97       	sbiw	r30, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <main+0xba>
 12a:	23 c0       	rjmp	.+70     	; 0x172 <main+0x106>
    _delay_ms(190);
  }
  
  if(c==0b11110001)  
 12c:	81 3f       	cpi	r24, 0xF1	; 241
 12e:	91 05       	cpc	r25, r1
 130:	71 f4       	brne	.+28     	; 0x14e <main+0xe2>
  {
   PORTB=0b00001010;
 132:	58 bb       	out	0x18, r21	; 24
 134:	f6 01       	movw	r30, r12
 136:	31 97       	sbiw	r30, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <main+0xca>
   _delay_ms(260);
   PORTB=0b00001001;
 13a:	48 bb       	out	0x18, r20	; 24
 13c:	24 e5       	ldi	r18, 0x54	; 84
 13e:	3b e0       	ldi	r19, 0x0B	; 11
 140:	fd 01       	movw	r30, r26
 142:	31 97       	sbiw	r30, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <main+0xd6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 146:	21 50       	subi	r18, 0x01	; 1
 148:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 14a:	d1 f7       	brne	.-12     	; 0x140 <main+0xd4>
 14c:	1a c0       	rjmp	.+52     	; 0x182 <main+0x116>
   _delay_ms(290);
  }
  
  if(c==0b11111001)
 14e:	89 3f       	cpi	r24, 0xF9	; 249
 150:	91 05       	cpc	r25, r1
 152:	51 f4       	brne	.+20     	; 0x168 <main+0xfc>
  {
   PORTB=0b00001010;
 154:	58 bb       	out	0x18, r21	; 24
 156:	f7 01       	movw	r30, r14
 158:	31 97       	sbiw	r30, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <main+0xec>
   _delay_ms(160);
   PORTB=0b00001001;
 15c:	48 bb       	out	0x18, r20	; 24
 15e:	f8 01       	movw	r30, r16
 160:	31 97       	sbiw	r30, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <main+0xf4>
   _delay_ms(215);
  }
  
  if(c==0b11111001)
   PORTB=0b00001001;
 164:	48 bb       	out	0x18, r20	; 24
 166:	0d c0       	rjmp	.+26     	; 0x182 <main+0x116>
   
  if(c==0b11110011)
 168:	83 3f       	cpi	r24, 0xF3	; 243
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <main+0x106>
   PORTB=0b00001010;
 16e:	58 bb       	out	0x18, r21	; 24
 170:	0d c0       	rjmp	.+26     	; 0x18c <main+0x120>
   
  if(c==0b11110110)
 172:	86 3f       	cpi	r24, 0xF6	; 246
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <main+0x110>
   PORTB=0b00000110;
 178:	68 bb       	out	0x18, r22	; 24
 17a:	0d c0       	rjmp	.+26     	; 0x196 <main+0x12a>
   
  if(c==0b11111110)
 17c:	8e 3f       	cpi	r24, 0xFE	; 254
 17e:	91 05       	cpc	r25, r1
 180:	19 f0       	breq	.+6      	; 0x188 <main+0x11c>
   PORTB=0b00000110;
   
  if(c==0b11110111)
 182:	87 3f       	cpi	r24, 0xF7	; 247
 184:	91 05       	cpc	r25, r1
 186:	11 f4       	brne	.+4      	; 0x18c <main+0x120>
   PORTB=0b00000110;
 188:	68 bb       	out	0x18, r22	; 24
 18a:	a0 cf       	rjmp	.-192    	; 0xcc <main+0x60>
   
  if(c==0b11111011)
 18c:	8b 3f       	cpi	r24, 0xFB	; 251
 18e:	91 05       	cpc	r25, r1
 190:	11 f4       	brne	.+4      	; 0x196 <main+0x12a>
   PORTB=0b00001001;
 192:	48 bb       	out	0x18, r20	; 24
 194:	9b cf       	rjmp	.-202    	; 0xcc <main+0x60>
   
  if(c==0b11111101)
 196:	8d 3f       	cpi	r24, 0xFD	; 253
 198:	91 05       	cpc	r25, r1
 19a:	09 f0       	breq	.+2      	; 0x19e <main+0x132>
 19c:	97 cf       	rjmp	.-210    	; 0xcc <main+0x60>
   PORTB=0b0000101;
 19e:	78 bb       	out	0x18, r23	; 24
 1a0:	95 cf       	rjmp	.-214    	; 0xcc <main+0x60>

000001a2 <_exit>:
 1a2:	f8 94       	cli

000001a4 <__stop_program>:
 1a4:	ff cf       	rjmp	.-2      	; 0x1a4 <__stop_program>
